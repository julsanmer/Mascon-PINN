# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


from typing import Union, Iterable
from Basilisk.utilities import pythonVariableLogger



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _dualHingedRigidBodyStateEffector
else:
    import _dualHingedRigidBodyStateEffector

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



from Basilisk.architecture.swig_common_model import *


def new_doubleArray(nelements):
    return _dualHingedRigidBodyStateEffector.new_doubleArray(nelements)

def delete_doubleArray(ary):
    return _dualHingedRigidBodyStateEffector.delete_doubleArray(ary)

def doubleArray_getitem(ary, index):
    return _dualHingedRigidBodyStateEffector.doubleArray_getitem(ary, index)

def doubleArray_setitem(ary, index, value):
    return _dualHingedRigidBodyStateEffector.doubleArray_setitem(ary, index, value)

def new_longArray(nelements):
    return _dualHingedRigidBodyStateEffector.new_longArray(nelements)

def delete_longArray(ary):
    return _dualHingedRigidBodyStateEffector.delete_longArray(ary)

def longArray_getitem(ary, index):
    return _dualHingedRigidBodyStateEffector.longArray_getitem(ary, index)

def longArray_setitem(ary, index, value):
    return _dualHingedRigidBodyStateEffector.longArray_setitem(ary, index, value)

def new_intArray(nelements):
    return _dualHingedRigidBodyStateEffector.new_intArray(nelements)

def delete_intArray(ary):
    return _dualHingedRigidBodyStateEffector.delete_intArray(ary)

def intArray_getitem(ary, index):
    return _dualHingedRigidBodyStateEffector.intArray_getitem(ary, index)

def intArray_setitem(ary, index, value):
    return _dualHingedRigidBodyStateEffector.intArray_setitem(ary, index, value)

def new_shortArray(nelements):
    return _dualHingedRigidBodyStateEffector.new_shortArray(nelements)

def delete_shortArray(ary):
    return _dualHingedRigidBodyStateEffector.delete_shortArray(ary)

def shortArray_getitem(ary, index):
    return _dualHingedRigidBodyStateEffector.shortArray_getitem(ary, index)

def shortArray_setitem(ary, index, value):
    return _dualHingedRigidBodyStateEffector.shortArray_setitem(ary, index, value)


def getStructSize(self):
    try:
        return eval('sizeof_' + repr(self).split(';')[0].split('.')[-1])
    except (NameError) as e:
        typeString = 'sizeof_' + repr(self).split(';')[0].split('.')[-1]
        raise NameError(e.message + '\nYou tried to get this size macro: ' + typeString + 
            '\n It appears to be undefined.  \nYou need to run the SWIG GEN_SIZEOF' +  
            ' SWIG macro against the class/struct in your SWIG file if you want to ' + 
            ' make this call.\n')


def protectSetAttr(self, name, value):
    if(hasattr(self, name) or name == 'this' or name.find('swig') >= 0):
        object.__setattr__(self, name, value)
    else:
        raise ValueError('You tried to add this variable: ' + name + '\n' + 
            'To this class: ' + str(self))

def protectAllClasses(moduleType):
    import inspect
    import sys
    clsmembers = inspect.getmembers(sys.modules[__name__], inspect.isclass)
    for member in clsmembers:
        try:
            exec(str(member[0]) + '.__setattr__ = protectSetAttr')
            exec(str(member[0]) + '.getStructSize = getStructSize') 
        except (AttributeError, TypeError) as e:
            pass


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_SwigPyIterator

    def value(self):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_equal(self, x)

    def copy(self):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_copy(self)

    def next(self):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_next(self)

    def __next__(self):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator___next__(self)

    def previous(self):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_previous(self)

    def advance(self, n):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _dualHingedRigidBodyStateEffector.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.SwigPyIterator_swigregister(SwigPyIterator)

from Basilisk.architecture.swig_common_model import *

MAX_LOGGING_LENGTH = _dualHingedRigidBodyStateEffector.MAX_LOGGING_LENGTH
BSK_DEBUG = _dualHingedRigidBodyStateEffector.BSK_DEBUG
BSK_INFORMATION = _dualHingedRigidBodyStateEffector.BSK_INFORMATION
BSK_WARNING = _dualHingedRigidBodyStateEffector.BSK_WARNING
BSK_ERROR = _dualHingedRigidBodyStateEffector.BSK_ERROR
BSK_SILENT = _dualHingedRigidBodyStateEffector.BSK_SILENT

def printDefaultLogLevel():
    return _dualHingedRigidBodyStateEffector.printDefaultLogLevel()

def setDefaultLogLevel(logLevel):
    return _dualHingedRigidBodyStateEffector.setDefaultLogLevel(logLevel)

def getDefaultLogLevel():
    return _dualHingedRigidBodyStateEffector.getDefaultLogLevel()
class BSKLogger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _dualHingedRigidBodyStateEffector.BSKLogger_swiginit(self, _dualHingedRigidBodyStateEffector.new_BSKLogger(*args))
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_BSKLogger

    def setLogLevel(self, logLevel):
        return _dualHingedRigidBodyStateEffector.BSKLogger_setLogLevel(self, logLevel)

    def printLogLevel(self):
        return _dualHingedRigidBodyStateEffector.BSKLogger_printLogLevel(self)

    def getLogLevel(self):
        return _dualHingedRigidBodyStateEffector.BSKLogger_getLogLevel(self)

    def bskLog(self, targetLevel, info):
        return _dualHingedRigidBodyStateEffector.BSKLogger_bskLog(self, targetLevel, info)
    logLevelMap = property(_dualHingedRigidBodyStateEffector.BSKLogger_logLevelMap_get, _dualHingedRigidBodyStateEffector.BSKLogger_logLevelMap_set)

# Register BSKLogger in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.BSKLogger_swigregister(BSKLogger)
cvar = _dualHingedRigidBodyStateEffector.cvar


def _BSKLogger():
    return _dualHingedRigidBodyStateEffector._BSKLogger()

def _BSKLogger_d(arg1):
    return _dualHingedRigidBodyStateEffector._BSKLogger_d(arg1)

def _printLogLevel(arg1):
    return _dualHingedRigidBodyStateEffector._printLogLevel(arg1)

def _setLogLevel(arg1, arg2):
    return _dualHingedRigidBodyStateEffector._setLogLevel(arg1, arg2)

def _bskLog(arg1, arg2, arg3):
    return _dualHingedRigidBodyStateEffector._bskLog(arg1, arg2, arg3)
class SysModel(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _dualHingedRigidBodyStateEffector.SysModel_swiginit(self, _dualHingedRigidBodyStateEffector.new_SysModel(*args))
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_SysModel

    def SelfInit(self):
        return _dualHingedRigidBodyStateEffector.SysModel_SelfInit(self)

    def IntegratedInit(self):
        return _dualHingedRigidBodyStateEffector.SysModel_IntegratedInit(self)

    def UpdateState(self, CurrentSimNanos):
        return _dualHingedRigidBodyStateEffector.SysModel_UpdateState(self, CurrentSimNanos)

    def Reset(self, CurrentSimNanos):
        return _dualHingedRigidBodyStateEffector.SysModel_Reset(self, CurrentSimNanos)
    ModelTag = property(_dualHingedRigidBodyStateEffector.SysModel_ModelTag_get, _dualHingedRigidBodyStateEffector.SysModel_ModelTag_set)
    CallCounts = property(_dualHingedRigidBodyStateEffector.SysModel_CallCounts_get, _dualHingedRigidBodyStateEffector.SysModel_CallCounts_set)
    RNGSeed = property(_dualHingedRigidBodyStateEffector.SysModel_RNGSeed_get, _dualHingedRigidBodyStateEffector.SysModel_RNGSeed_set)
    moduleID = property(_dualHingedRigidBodyStateEffector.SysModel_moduleID_get, _dualHingedRigidBodyStateEffector.SysModel_moduleID_set)

    def logger(self, *args, **kwargs):
        raise TypeError(
            f"The 'logger' function is not supported for this type ('{type(self).__qualname__}'). "
            "To fix this, update the SWIG file for this module. Change "
            """'%include "sys_model.h"' to '%include "sys_model.i"'"""
        )


    def logger(self, variableNames: Union[str, Iterable[str]], recordingTime: int = 0):
        if isinstance(variableNames, str):
            variableNames = [variableNames]

        logging_functions = {
            variable_name: lambda _, vn=variable_name: getattr(self, vn)
            for variable_name in variableNames
        }

        for variable_name, log_fun in logging_functions.items():
            try:
                log_fun(0)
            except AttributeError:
                raise ValueError(f"Cannot log {variable_name} as it is not a "
                                f"variable of {type(self).__name__}")

        return pythonVariableLogger.PythonVariableLogger(logging_functions, recordingTime)


# Register SysModel in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.SysModel_swigregister(SysModel)
class StateData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    state = property(_dualHingedRigidBodyStateEffector.StateData_state_get, _dualHingedRigidBodyStateEffector.StateData_state_set)
    stateDeriv = property(_dualHingedRigidBodyStateEffector.StateData_stateDeriv_get, _dualHingedRigidBodyStateEffector.StateData_stateDeriv_set)
    stateName = property(_dualHingedRigidBodyStateEffector.StateData_stateName_get, _dualHingedRigidBodyStateEffector.StateData_stateName_set)
    stateEnabled = property(_dualHingedRigidBodyStateEffector.StateData_stateEnabled_get, _dualHingedRigidBodyStateEffector.StateData_stateEnabled_set)
    bskLogger = property(_dualHingedRigidBodyStateEffector.StateData_bskLogger_get, _dualHingedRigidBodyStateEffector.StateData_bskLogger_set)

    def __init__(self, *args):
        _dualHingedRigidBodyStateEffector.StateData_swiginit(self, _dualHingedRigidBodyStateEffector.new_StateData(*args))
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_StateData

    def setState(self, newState):
        return _dualHingedRigidBodyStateEffector.StateData_setState(self, newState)

    def propagateState(self, dt):
        return _dualHingedRigidBodyStateEffector.StateData_propagateState(self, dt)

    def setDerivative(self, newDeriv):
        return _dualHingedRigidBodyStateEffector.StateData_setDerivative(self, newDeriv)

    def getState(self):
        return _dualHingedRigidBodyStateEffector.StateData_getState(self)

    def getStateDeriv(self):
        return _dualHingedRigidBodyStateEffector.StateData_getStateDeriv(self)

    def getName(self):
        return _dualHingedRigidBodyStateEffector.StateData_getName(self)

    def getRowSize(self):
        return _dualHingedRigidBodyStateEffector.StateData_getRowSize(self)

    def getColumnSize(self):
        return _dualHingedRigidBodyStateEffector.StateData_getColumnSize(self)

    def isStateActive(self):
        return _dualHingedRigidBodyStateEffector.StateData_isStateActive(self)

    def disable(self):
        return _dualHingedRigidBodyStateEffector.StateData_disable(self)

    def enable(self):
        return _dualHingedRigidBodyStateEffector.StateData_enable(self)

    def scaleState(self, scaleFactor):
        return _dualHingedRigidBodyStateEffector.StateData_scaleState(self, scaleFactor)

    def __add__(self, operand):
        return _dualHingedRigidBodyStateEffector.StateData___add__(self, operand)

    def __mul__(self, scaleFactor):
        return _dualHingedRigidBodyStateEffector.StateData___mul__(self, scaleFactor)

# Register StateData in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.StateData_swigregister(StateData)
class BackSubMatrices(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    matrixA = property(_dualHingedRigidBodyStateEffector.BackSubMatrices_matrixA_get, _dualHingedRigidBodyStateEffector.BackSubMatrices_matrixA_set)
    matrixB = property(_dualHingedRigidBodyStateEffector.BackSubMatrices_matrixB_get, _dualHingedRigidBodyStateEffector.BackSubMatrices_matrixB_set)
    matrixC = property(_dualHingedRigidBodyStateEffector.BackSubMatrices_matrixC_get, _dualHingedRigidBodyStateEffector.BackSubMatrices_matrixC_set)
    matrixD = property(_dualHingedRigidBodyStateEffector.BackSubMatrices_matrixD_get, _dualHingedRigidBodyStateEffector.BackSubMatrices_matrixD_set)
    vecTrans = property(_dualHingedRigidBodyStateEffector.BackSubMatrices_vecTrans_get, _dualHingedRigidBodyStateEffector.BackSubMatrices_vecTrans_set)
    vecRot = property(_dualHingedRigidBodyStateEffector.BackSubMatrices_vecRot_get, _dualHingedRigidBodyStateEffector.BackSubMatrices_vecRot_set)

    def __init__(self):
        _dualHingedRigidBodyStateEffector.BackSubMatrices_swiginit(self, _dualHingedRigidBodyStateEffector.new_BackSubMatrices())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_BackSubMatrices

# Register BackSubMatrices in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.BackSubMatrices_swigregister(BackSubMatrices)
class EffectorMassProps(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mEff = property(_dualHingedRigidBodyStateEffector.EffectorMassProps_mEff_get, _dualHingedRigidBodyStateEffector.EffectorMassProps_mEff_set)
    mEffDot = property(_dualHingedRigidBodyStateEffector.EffectorMassProps_mEffDot_get, _dualHingedRigidBodyStateEffector.EffectorMassProps_mEffDot_set)
    IEffPntB_B = property(_dualHingedRigidBodyStateEffector.EffectorMassProps_IEffPntB_B_get, _dualHingedRigidBodyStateEffector.EffectorMassProps_IEffPntB_B_set)
    rEff_CB_B = property(_dualHingedRigidBodyStateEffector.EffectorMassProps_rEff_CB_B_get, _dualHingedRigidBodyStateEffector.EffectorMassProps_rEff_CB_B_set)
    rEffPrime_CB_B = property(_dualHingedRigidBodyStateEffector.EffectorMassProps_rEffPrime_CB_B_get, _dualHingedRigidBodyStateEffector.EffectorMassProps_rEffPrime_CB_B_set)
    IEffPrimePntB_B = property(_dualHingedRigidBodyStateEffector.EffectorMassProps_IEffPrimePntB_B_get, _dualHingedRigidBodyStateEffector.EffectorMassProps_IEffPrimePntB_B_set)

    def __init__(self):
        _dualHingedRigidBodyStateEffector.EffectorMassProps_swiginit(self, _dualHingedRigidBodyStateEffector.new_EffectorMassProps())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_EffectorMassProps

# Register EffectorMassProps in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.EffectorMassProps_swigregister(EffectorMassProps)
class StateEffector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    nameOfSpacecraftAttachedTo = property(_dualHingedRigidBodyStateEffector.StateEffector_nameOfSpacecraftAttachedTo_get, _dualHingedRigidBodyStateEffector.StateEffector_nameOfSpacecraftAttachedTo_set)
    parentSpacecraftName = property(_dualHingedRigidBodyStateEffector.StateEffector_parentSpacecraftName_get, _dualHingedRigidBodyStateEffector.StateEffector_parentSpacecraftName_set)
    effProps = property(_dualHingedRigidBodyStateEffector.StateEffector_effProps_get, _dualHingedRigidBodyStateEffector.StateEffector_effProps_set)
    stateDerivContribution = property(_dualHingedRigidBodyStateEffector.StateEffector_stateDerivContribution_get, _dualHingedRigidBodyStateEffector.StateEffector_stateDerivContribution_set)
    forceOnBody_B = property(_dualHingedRigidBodyStateEffector.StateEffector_forceOnBody_B_get, _dualHingedRigidBodyStateEffector.StateEffector_forceOnBody_B_set)
    torqueOnBodyPntB_B = property(_dualHingedRigidBodyStateEffector.StateEffector_torqueOnBodyPntB_B_get, _dualHingedRigidBodyStateEffector.StateEffector_torqueOnBodyPntB_B_set)
    torqueOnBodyPntC_B = property(_dualHingedRigidBodyStateEffector.StateEffector_torqueOnBodyPntC_B_get, _dualHingedRigidBodyStateEffector.StateEffector_torqueOnBodyPntC_B_set)
    r_BP_P = property(_dualHingedRigidBodyStateEffector.StateEffector_r_BP_P_get, _dualHingedRigidBodyStateEffector.StateEffector_r_BP_P_set)
    dcm_BP = property(_dualHingedRigidBodyStateEffector.StateEffector_dcm_BP_get, _dualHingedRigidBodyStateEffector.StateEffector_dcm_BP_set)
    bskLogger = property(_dualHingedRigidBodyStateEffector.StateEffector_bskLogger_get, _dualHingedRigidBodyStateEffector.StateEffector_bskLogger_set)
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_StateEffector

    def updateEffectorMassProps(self, integTime):
        return _dualHingedRigidBodyStateEffector.StateEffector_updateEffectorMassProps(self, integTime)

    def updateContributions(self, integTime, backSubContr, sigma_BN, omega_BN_B, g_N):
        return _dualHingedRigidBodyStateEffector.StateEffector_updateContributions(self, integTime, backSubContr, sigma_BN, omega_BN_B, g_N)

    def updateEnergyMomContributions(self, integTime, rotAngMomPntCContr_B, rotEnergyContr, omega_BN_B):
        return _dualHingedRigidBodyStateEffector.StateEffector_updateEnergyMomContributions(self, integTime, rotAngMomPntCContr_B, rotEnergyContr, omega_BN_B)

    def modifyStates(self, integTime):
        return _dualHingedRigidBodyStateEffector.StateEffector_modifyStates(self, integTime)

    def calcForceTorqueOnBody(self, integTime, omega_BN_B):
        return _dualHingedRigidBodyStateEffector.StateEffector_calcForceTorqueOnBody(self, integTime, omega_BN_B)

    def writeOutputStateMessages(self, integTimeNanos):
        return _dualHingedRigidBodyStateEffector.StateEffector_writeOutputStateMessages(self, integTimeNanos)

    def registerStates(self, states):
        return _dualHingedRigidBodyStateEffector.StateEffector_registerStates(self, states)

    def linkInStates(self, states):
        return _dualHingedRigidBodyStateEffector.StateEffector_linkInStates(self, states)

    def computeDerivatives(self, integTime, rDDot_BN_N, omegaDot_BN_B, sigma_BN):
        return _dualHingedRigidBodyStateEffector.StateEffector_computeDerivatives(self, integTime, rDDot_BN_N, omegaDot_BN_B, sigma_BN)

    def prependSpacecraftNameToStates(self):
        return _dualHingedRigidBodyStateEffector.StateEffector_prependSpacecraftNameToStates(self)

    def receiveMotherSpacecraftData(self, rSC_BP_P, dcmSC_BP):
        return _dualHingedRigidBodyStateEffector.StateEffector_receiveMotherSpacecraftData(self, rSC_BP_P, dcmSC_BP)

# Register StateEffector in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.StateEffector_swigregister(StateEffector)
class StateVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    stateMap = property(_dualHingedRigidBodyStateEffector.StateVector_stateMap_get, _dualHingedRigidBodyStateEffector.StateVector_stateMap_set)

    def __add__(self, operand):
        return _dualHingedRigidBodyStateEffector.StateVector___add__(self, operand)

    def __mul__(self, scaleFactor):
        return _dualHingedRigidBodyStateEffector.StateVector___mul__(self, scaleFactor)

    def __init__(self):
        _dualHingedRigidBodyStateEffector.StateVector_swiginit(self, _dualHingedRigidBodyStateEffector.new_StateVector())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_StateVector

# Register StateVector in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.StateVector_swigregister(StateVector)
class DynParamManager(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dynProperties = property(_dualHingedRigidBodyStateEffector.DynParamManager_dynProperties_get, _dualHingedRigidBodyStateEffector.DynParamManager_dynProperties_set)
    stateContainer = property(_dualHingedRigidBodyStateEffector.DynParamManager_stateContainer_get, _dualHingedRigidBodyStateEffector.DynParamManager_stateContainer_set)
    bskLogger = property(_dualHingedRigidBodyStateEffector.DynParamManager_bskLogger_get, _dualHingedRigidBodyStateEffector.DynParamManager_bskLogger_set)

    def __init__(self):
        _dualHingedRigidBodyStateEffector.DynParamManager_swiginit(self, _dualHingedRigidBodyStateEffector.new_DynParamManager())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_DynParamManager

    def registerState(self, nRow, nCol, stateName):
        return _dualHingedRigidBodyStateEffector.DynParamManager_registerState(self, nRow, nCol, stateName)

    def getStateObject(self, stateName):
        return _dualHingedRigidBodyStateEffector.DynParamManager_getStateObject(self, stateName)

    def getStateVector(self):
        return _dualHingedRigidBodyStateEffector.DynParamManager_getStateVector(self)

    def updateStateVector(self, newState):
        return _dualHingedRigidBodyStateEffector.DynParamManager_updateStateVector(self, newState)

    def propagateStateVector(self, dt):
        return _dualHingedRigidBodyStateEffector.DynParamManager_propagateStateVector(self, dt)

    def createProperty(self, propName, propValue):
        return _dualHingedRigidBodyStateEffector.DynParamManager_createProperty(self, propName, propValue)

    def getPropertyReference(self, propName):
        return _dualHingedRigidBodyStateEffector.DynParamManager_getPropertyReference(self, propName)

    def setPropertyValue(self, propName, propValue):
        return _dualHingedRigidBodyStateEffector.DynParamManager_setPropertyValue(self, propName, propValue)

# Register DynParamManager in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.DynParamManager_swigregister(DynParamManager)
class DualHingedRigidBodyStateEffector(StateEffector, SysModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_swiginit(self, _dualHingedRigidBodyStateEffector.new_DualHingedRigidBodyStateEffector())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_DualHingedRigidBodyStateEffector

    def registerStates(self, statesIn):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_registerStates(self, statesIn)

    def linkInStates(self, states):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_linkInStates(self, states)

    def updateEffectorMassProps(self, integTime):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_updateEffectorMassProps(self, integTime)

    def updateContributions(self, integTime, backSubContr, sigma_BN, omega_BN_B, g_N):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_updateContributions(self, integTime, backSubContr, sigma_BN, omega_BN_B, g_N)

    def updateEnergyMomContributions(self, integTime, rotAngMomPntCContr_B, rotEnergyContr, omega_BN_B):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_updateEnergyMomContributions(self, integTime, rotAngMomPntCContr_B, rotEnergyContr, omega_BN_B)

    def computeDerivatives(self, integTime, rDDot_BN_N, omegaDot_BN_B, sigma_BN):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_computeDerivatives(self, integTime, rDDot_BN_N, omegaDot_BN_B, sigma_BN)

    def Reset(self, CurrentSimNanos):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_Reset(self, CurrentSimNanos)

    def UpdateState(self, CurrentSimNanos):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_UpdateState(self, CurrentSimNanos)

    def writeOutputStateMessages(self, CurrentClock):
        return _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_writeOutputStateMessages(self, CurrentClock)
    mass1 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_mass1_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_mass1_set)
    mass2 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_mass2_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_mass2_set)
    d1 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_d1_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_d1_set)
    d2 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_d2_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_d2_set)
    l1 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_l1_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_l1_set)
    k1 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_k1_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_k1_set)
    k2 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_k2_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_k2_set)
    c1 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_c1_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_c1_set)
    c2 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_c2_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_c2_set)
    theta1Init = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta1Init_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta1Init_set)
    theta1DotInit = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta1DotInit_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta1DotInit_set)
    theta2Init = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta2Init_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta2Init_set)
    theta2DotInit = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta2DotInit_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_theta2DotInit_set)
    IPntS1_S1 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_IPntS1_S1_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_IPntS1_S1_set)
    IPntS2_S2 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_IPntS2_S2_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_IPntS2_S2_set)
    r_H1B_B = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_r_H1B_B_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_r_H1B_B_set)
    dcm_H1B = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_dcm_H1B_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_dcm_H1B_set)
    thetaH2S1 = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_thetaH2S1_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_thetaH2S1_set)
    nameOfTheta1State = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta1State_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta1State_set)
    nameOfTheta1DotState = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta1DotState_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta1DotState_set)
    nameOfTheta2State = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta2State_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta2State_set)
    nameOfTheta2DotState = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta2DotState_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_nameOfTheta2DotState_set)
    bskLogger = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_bskLogger_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_bskLogger_set)
    motorTorqueInMsg = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_motorTorqueInMsg_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_motorTorqueInMsg_set)
    dualHingedRigidBodyOutMsgs = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_dualHingedRigidBodyOutMsgs_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_dualHingedRigidBodyOutMsgs_set)
    dualHingedRigidBodyConfigLogOutMsgs = property(_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_dualHingedRigidBodyConfigLogOutMsgs_get, _dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_dualHingedRigidBodyConfigLogOutMsgs_set)

# Register DualHingedRigidBodyStateEffector in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.DualHingedRigidBodyStateEffector_swigregister(DualHingedRigidBodyStateEffector)
class SCStatesMsgPayload(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    r_BN_N = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_r_BN_N_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_r_BN_N_set)
    v_BN_N = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_v_BN_N_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_v_BN_N_set)
    r_CN_N = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_r_CN_N_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_r_CN_N_set)
    v_CN_N = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_v_CN_N_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_v_CN_N_set)
    sigma_BN = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_sigma_BN_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_sigma_BN_set)
    omega_BN_B = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_omega_BN_B_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_omega_BN_B_set)
    omegaDot_BN_B = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_omegaDot_BN_B_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_omegaDot_BN_B_set)
    TotalAccumDVBdy = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_TotalAccumDVBdy_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_TotalAccumDVBdy_set)
    TotalAccumDV_BN_B = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_TotalAccumDV_BN_B_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_TotalAccumDV_BN_B_set)
    nonConservativeAccelpntB_B = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_nonConservativeAccelpntB_B_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_nonConservativeAccelpntB_B_set)
    MRPSwitchCount = property(_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_MRPSwitchCount_get, _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_MRPSwitchCount_set)

    def __init__(self):
        _dualHingedRigidBodyStateEffector.SCStatesMsgPayload_swiginit(self, _dualHingedRigidBodyStateEffector.new_SCStatesMsgPayload())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_SCStatesMsgPayload

# Register SCStatesMsgPayload in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.SCStatesMsgPayload_swigregister(SCStatesMsgPayload)
class ArrayMotorTorqueMsgPayload(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    motorTorque = property(_dualHingedRigidBodyStateEffector.ArrayMotorTorqueMsgPayload_motorTorque_get, _dualHingedRigidBodyStateEffector.ArrayMotorTorqueMsgPayload_motorTorque_set)

    def __init__(self):
        _dualHingedRigidBodyStateEffector.ArrayMotorTorqueMsgPayload_swiginit(self, _dualHingedRigidBodyStateEffector.new_ArrayMotorTorqueMsgPayload())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_ArrayMotorTorqueMsgPayload

# Register ArrayMotorTorqueMsgPayload in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.ArrayMotorTorqueMsgPayload_swigregister(ArrayMotorTorqueMsgPayload)
class HingedRigidBodyMsgPayload(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    theta = property(_dualHingedRigidBodyStateEffector.HingedRigidBodyMsgPayload_theta_get, _dualHingedRigidBodyStateEffector.HingedRigidBodyMsgPayload_theta_set)
    thetaDot = property(_dualHingedRigidBodyStateEffector.HingedRigidBodyMsgPayload_thetaDot_get, _dualHingedRigidBodyStateEffector.HingedRigidBodyMsgPayload_thetaDot_set)

    def __init__(self):
        _dualHingedRigidBodyStateEffector.HingedRigidBodyMsgPayload_swiginit(self, _dualHingedRigidBodyStateEffector.new_HingedRigidBodyMsgPayload())
    __swig_destroy__ = _dualHingedRigidBodyStateEffector.delete_HingedRigidBodyMsgPayload

# Register HingedRigidBodyMsgPayload in _dualHingedRigidBodyStateEffector:
_dualHingedRigidBodyStateEffector.HingedRigidBodyMsgPayload_swigregister(HingedRigidBodyMsgPayload)

import sys
protectAllClasses(sys.modules[__name__])


